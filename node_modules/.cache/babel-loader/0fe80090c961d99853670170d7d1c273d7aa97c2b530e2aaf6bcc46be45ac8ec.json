{"ast":null,"code":"class Auth {\n  constructor() {\n    this._baseUrl = \"https://auth.nomoreparties.co\";\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(res.status);\n  }\n  register(user) {\n    return fetch(`${this._baseUrl}/signup`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    }).then(res => this._checkResponse(res));\n  }\n  login(user) {\n    return fetch(`${this._baseUrl}/signin`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    }).then(res => this._checkResponse(res));\n  }\n  checkToken(token) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${token}`\n      }\n    }).then(res => this._checkResponse(res));\n  }\n}\nexport default new Auth();","map":{"version":3,"names":["Auth","constructor","_baseUrl","_checkResponse","res","ok","json","Promise","reject","status","register","user","fetch","method","headers","Accept","body","JSON","stringify","then","login","checkToken","token","authorization"],"sources":["/Users/eva/Desktop/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["class Auth {\r\n  constructor() {\r\n    this._baseUrl = \"https://auth.nomoreparties.co\";\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(res.status);\r\n  }\r\n\r\n  register(user) {\r\n    return fetch(`${this._baseUrl}/signup`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n\r\n  login(user) {\r\n    return fetch(`${this._baseUrl}/signin`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n  checkToken(token) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n}\r\n\r\nexport default new Auth();\r\n"],"mappings":"AAAA,MAAMA,IAAI,CAAC;EACTC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,QAAQ,GAAG,+BAA+B;EACjD;EAEAC,cAAcA,CAACC,GAAG,EAAE;IAClB,IAAIA,GAAG,CAACC,EAAE,EAAE;MACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;IACnB;IACA,OAAOC,OAAO,CAACC,MAAM,CAACJ,GAAG,CAACK,MAAM,CAAC;EACnC;EAEAC,QAAQA,CAACC,IAAI,EAAE;IACb,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACV,QAAS,SAAQ,EAAE;MACtCW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACPC,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;IAC3B,CAAC,CAAC,CAACQ,IAAI,CAAEf,GAAG,IAAK,IAAI,CAACD,cAAc,CAACC,GAAG,CAAC,CAAC;EAC5C;EAEAgB,KAAKA,CAACT,IAAI,EAAE;IACV,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACV,QAAS,SAAQ,EAAE;MACtCW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACPC,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;IAC3B,CAAC,CAAC,CAACQ,IAAI,CAAEf,GAAG,IAAK,IAAI,CAACD,cAAc,CAACC,GAAG,CAAC,CAAC;EAC5C;EACAiB,UAAUA,CAACC,KAAK,EAAE;IAChB,OAAOV,KAAK,CAAE,GAAE,IAAI,CAACV,QAAS,WAAU,EAAE;MACxCW,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE,kBAAkB;QAClCQ,aAAa,EAAG,UAASD,KAAM;MACjC;IACF,CAAC,CAAC,CAACH,IAAI,CAAEf,GAAG,IAAK,IAAI,CAACD,cAAc,CAACC,GAAG,CAAC,CAAC;EAC5C;AACF;AAEA,eAAe,IAAIJ,IAAI,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}