{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      url,\n      headers\n    } = _ref;\n    this._baseUrl = url;\n    this._headers = headers;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(res.status);\n  }\n  getUser() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  updateUserInfo(_ref2) {\n    let {\n      name,\n      about\n    } = _ref2;\n    return fetch(`${this._baseUrl}/users/me/`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this._checkResponse);\n  }\n  createCard(_ref3) {\n    let {\n      link,\n      name\n    } = _ref3;\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        link,\n        name\n      })\n    }).then(this._checkResponse);\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  updateUserAvatar(_ref4) {\n    let {\n      avatar\n    } = _ref4;\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(this._checkResponse);\n  }\n  likeCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  dislikeCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n}\nconst api = new Api({\n  url: \"https://mesto.nomoreparties.co/v1/cohort-65\",\n  headers: {\n    authorization: \"4590de2a-b582-438b-8c12-6867a9dc2da9\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","_ref","url","headers","_baseUrl","_headers","_checkResponse","res","ok","json","Promise","reject","status","getUser","fetch","method","then","getInitialCards","updateUserInfo","_ref2","name","about","body","JSON","stringify","createCard","_ref3","link","deleteCard","cardId","updateUserAvatar","_ref4","avatar","likeCard","dislikeCard","api","authorization"],"sources":["/Users/eva/Desktop/dev/react-mesto-auth/src/utils/api.js"],"sourcesContent":["class Api {\r\n  constructor({ url, headers }) {\r\n    this._baseUrl = url;\r\n    this._headers = headers;\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(res.status);\r\n  }\r\n\r\n  getUser() {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  updateUserInfo({ name, about }) {\r\n    return fetch(`${this._baseUrl}/users/me/`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n\r\n      body: JSON.stringify({\r\n        name,\r\n        about,\r\n      }),\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  createCard({ link, name }) {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        link,\r\n        name,\r\n      }),\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  updateUserAvatar({ avatar }) {\r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar,\r\n      }),\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  likeCard(cardId) {\r\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n      method: \"PUT\",\r\n      headers: this._headers,\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  dislikeCard(cardId) {\r\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    }).then(this._checkResponse);\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  url: \"https://mesto.nomoreparties.co/v1/cohort-65\",\r\n  headers: {\r\n    authorization: \"4590de2a-b582-438b-8c12-6867a9dc2da9\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport default api;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}